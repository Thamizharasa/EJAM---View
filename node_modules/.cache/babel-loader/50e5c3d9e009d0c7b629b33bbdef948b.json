{"ast":null,"code":"var _jsxFileName = \"D:\\\\HerokuTest\\\\Ejam-View\\\\src\\\\Componets\\\\Deployment.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../Store/ActionCreators/DeploymentActions';\n\nclass Deployments extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.LoadDeployment();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        listStyleType: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, this.props.Deployments && this.props.Deployments.map((Delployment, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: Delployment._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 97\n      }\n    }, Delployment.templateName, \" \", /*#__PURE__*/React.createElement(\"button\", {\n      name: \"removeTask\",\n      onClick: event => this.props.handleClickIndex(Delployment._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 150\n      }\n    }, \"x\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    Deployments: state.Data\n  };\n};\n\nconst mapDispatchToProps = (dispatch, Ownprops) => {\n  return {\n    LoadDeployment: () => dispatch(actionCreator.LoadDeployment()),\n    handleClickIndex: DepID => dispatch(actionCreator.RemoveDeployment(DepID))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Deployments);","map":{"version":3,"sources":["D:/HerokuTest/Ejam-View/src/Componets/Deployment.js"],"names":["React","connect","actionCreator","Deployments","Component","constructor","props","componentDidMount","LoadDeployment","render","listStyleType","map","Delployment","index","_id","templateName","event","handleClickIndex","mapStateToProps","state","Data","mapDispatchToProps","dispatch","Ownprops","DepID","RemoveDeployment"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,aAAZ,MAA+B,2CAA/B;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CACA;AACIC,EAAAA,WAAW,CAAEC,KAAF,EACX;AAEG,UAAMA,KAAN;AAGF;;AAGLC,EAAAA,iBAAiB,GACjB;AACI,SAAKD,KAAL,CAAWE,cAAX;AACH;;AAGGC,EAAAA,MAAM,GACN;AAEI,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,aAAa,EAAC;AAAf,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEK,KAAKJ,KAAL,CAAWH,WAAX,IAA0B,KAAKG,KAAL,CAAWH,WAAX,CAAuBQ,GAAvB,CAA2B,CAACC,WAAD,EAAaC,KAAb,kBAAsB;AAAI,MAAA,GAAG,EAAED,WAAW,CAACE,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BF,WAAW,CAACG,YAAvC,oBAAqD;AAAQ,MAAA,IAAI,EAAC,YAAb;AAA0B,MAAA,OAAO,EAAEC,KAAK,IAAE,KAAKV,KAAL,CAAWW,gBAAX,CAA4BL,WAAW,CAACE,GAAxC,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAArD,CAAjD,CAF/B,CAFJ,CAFJ;AAaH;;AAhCL;;AAqCA,MAAMI,eAAe,GAAGC,KAAD,IACpB;AACK,SAAO;AACHhB,IAAAA,WAAW,EAACgB,KAAK,CAACC;AADf,GAAP;AAGL,CALH;;AAOE,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAUC,QAAV,KAAuB;AAC5C,SAAO;AACHf,IAAAA,cAAc,EAAG,MAAKc,QAAQ,CAACpB,aAAa,CAACM,cAAd,EAAD,CAD3B;AAEHS,IAAAA,gBAAgB,EAAIO,KAAD,IAAUF,QAAQ,CAACpB,aAAa,CAACuB,gBAAd,CAA+BD,KAA/B,CAAD;AAFlC,GAAP;AAIJ,CALF;;AAOF,eAAevB,OAAO,CAACiB,eAAD,EAAiBG,kBAAjB,CAAP,CAA4ClB,WAA5C,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actionCreator from '../Store/ActionCreators/DeploymentActions';\r\n\r\nclass Deployments extends React.Component\r\n{\r\n    constructor (props)\r\n    { \r\n\r\n       super(props);\r\n\r\n\r\n    }\r\n\r\n\r\ncomponentDidMount()\r\n{   \r\n    this.props.LoadDeployment();\r\n}\r\n\r\n\r\n    render()\r\n    {\r\n\r\n        return( \r\n\r\n            <div>\r\n               \r\n                <ul style={{listStyleType:\"none\"}}>\r\n                  {/* { this.props.Deployments && this.props.Delployments.map((Delployment,index)=><li key={Delployment._id}>{Delployment.templateName} <button name=\"removeTask\" onClick={event=>this.props.handleClickIndex(Delployment._id)}>x</button></li>  */}\r\n                    {this.props.Deployments && this.props.Deployments.map((Delployment,index)=> <li key={Delployment._id}>{Delployment.templateName} <button name=\"removeTask\" onClick={event=>this.props.handleClickIndex(Delployment._id)}>x</button></li> )}\r\n         \r\n                </ul>\r\n                \r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps= (state) => \r\n   {\r\n        return {\r\n            Deployments:state.Data\r\n        }\r\n  }\r\n\r\n  const mapDispatchToProps = (dispatch,Ownprops) => {\r\n        return {\r\n            LoadDeployment : ()=> dispatch(actionCreator.LoadDeployment()),\r\n            handleClickIndex : (DepID)=> dispatch(actionCreator.RemoveDeployment(DepID))\r\n        }\r\n   }\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Deployments);\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}