{"ast":null,"code":"import axios from 'axios';\nexport const Success = val => {\n  return {\n    type: \"ADD\",\n    payload: val\n  };\n};\nexport const Failure = val => {\n  return {\n    type: \"ERR\",\n    payload: val\n  };\n};\nexport const Delete = val => {\n  return {\n    type: \"DEL\",\n    payload: val\n  };\n};\nexport const AddDeployment = data => {\n  return dispatch => {\n    axios.post(\"http://localhost:8000/adddeployment\", data).then(res => {\n      dispatch(Success(res.data));\n      console.log(res.data);\n    }).catch(err => {\n      dispatch(Failure(err.message));\n    });\n  };\n};\nexport const RemoveDeployment = value => {\n  return dispatch => {\n    axios.delete(\"http://localhost:8000/deletedeployment\", value).then(res => {\n      dispatch(Delete(res.data));\n    }).catch(err => {\n      dispatch(Failure(err.message));\n    });\n  };\n};\nexport const LoadDeployment = () => {\n  return dispatch => {\n    axios.get(\"http://localhost:8000/getdeployments\").then(res => {\n      dispatch(Delete(res.data));\n    }).catch(err => {\n      dispatch(Failure(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["E:/Interview/EJAM-VIEW/my-app/src/Store/ActionCreators/DeploymentActions.js"],"names":["axios","Success","val","type","payload","Failure","Delete","AddDeployment","data","dispatch","post","then","res","console","log","catch","err","message","RemoveDeployment","value","delete","LoadDeployment","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,OAAO,GAAGC,GAAG,IAAI;AAC1B,SAAO;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAEF;AAAxB,GAAP;AACD,CAFI;AAIL,OAAO,MAAMG,OAAO,GAAGH,GAAG,IAAI;AAC5B,SAAO;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAEF;AAAxB,GAAP;AACD,CAFM;AAKP,OAAO,MAAMI,MAAM,GAAGJ,GAAG,IAAI;AAC3B,SAAO;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAEF;AAAxB,GAAP;AACD,CAFM;AAIT,OAAO,MAAMK,aAAa,GAAIC,IAAD,IAC7B;AAEI,SAAOC,QAAQ,IAAI;AACfT,IAAAA,KAAK,CAACU,IAAN,CAAW,qCAAX,EAAiDF,IAAjD,EACGG,IADH,CACQC,GAAG,IAAI;AACXH,MAAAA,QAAQ,CAACR,OAAO,CAACW,GAAG,CAACJ,IAAL,CAAR,CAAR;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACJ,IAAhB;AACD,KAJH,EAKGO,KALH,CAKSC,GAAG,IAAI;AACZP,MAAAA,QAAQ,CAACJ,OAAO,CAACW,GAAG,CAACC,OAAL,CAAR,CAAR;AACD,KAPH;AAQD,GATH;AAUH,CAbM;AAeP,OAAO,MAAMC,gBAAgB,GAAIC,KAAD,IAChC;AAEI,SAAOV,QAAQ,IAAI;AACfT,IAAAA,KAAK,CAACoB,MAAN,CAAa,wCAAb,EAAsDD,KAAtD,EACGR,IADH,CACQC,GAAG,IAAI;AACXH,MAAAA,QAAQ,CAACH,MAAM,CAACM,GAAG,CAACJ,IAAL,CAAP,CAAR;AACD,KAHH,EAIGO,KAJH,CAISC,GAAG,IAAI;AACZP,MAAAA,QAAQ,CAACJ,OAAO,CAACW,GAAG,CAACC,OAAL,CAAR,CAAR;AACD,KANH;AAOD,GARH;AAWH,CAdM;AAiBP,OAAO,MAAMI,cAAc,GAAG,MAC9B;AAEI,SAAOZ,QAAQ,IAAI;AACfT,IAAAA,KAAK,CAACsB,GAAN,CAAU,sCAAV,EACGX,IADH,CACQC,GAAG,IAAI;AACXH,MAAAA,QAAQ,CAACH,MAAM,CAACM,GAAG,CAACJ,IAAL,CAAP,CAAR;AACD,KAHH,EAIGO,KAJH,CAISC,GAAG,IAAI;AACZP,MAAAA,QAAQ,CAACJ,OAAO,CAACW,GAAG,CAACC,OAAL,CAAR,CAAR;AACD,KANH;AAOD,GARH;AAWH,CAdM","sourcesContent":["import axios from 'axios';\r\nexport const Success = val => {\r\n    return { type: \"ADD\", payload: val };\r\n  };\r\n\r\n  export const Failure = val => {\r\n    return { type: \"ERR\", payload: val };\r\n  };\r\n\r\n\r\n  export const Delete = val => {\r\n    return { type: \"DEL\", payload: val };\r\n  };\r\n\r\nexport const AddDeployment = (data) =>\r\n{\r\n\r\n    return dispatch => {\r\n        axios.post(\"http://localhost:8000/adddeployment\",data)\r\n          .then(res => {\r\n            dispatch(Success(res.data));\r\n            console.log(res.data);\r\n          })\r\n          .catch(err => {\r\n            dispatch(Failure(err.message));\r\n          });\r\n      };\r\n};\r\n\r\nexport const RemoveDeployment = (value) =>\r\n{\r\n\r\n    return dispatch => {\r\n        axios.delete(\"http://localhost:8000/deletedeployment\",value)\r\n          .then(res => {\r\n            dispatch(Delete(res.data));\r\n          })\r\n          .catch(err => {\r\n            dispatch(Failure(err.message));\r\n          });\r\n      };\r\n\r\n\r\n}\r\n\r\n\r\nexport const LoadDeployment = () =>\r\n{\r\n\r\n    return dispatch => {\r\n        axios.get(\"http://localhost:8000/getdeployments\")\r\n          .then(res => {\r\n            dispatch(Delete(res.data));\r\n          })\r\n          .catch(err => {\r\n            dispatch(Failure(err.message));\r\n          });\r\n      };\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}