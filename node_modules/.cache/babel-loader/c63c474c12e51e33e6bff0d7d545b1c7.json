{"ast":null,"code":"import axios from 'axios';\nexport const Success = val => {\n  return {\n    type: \"ADD\",\n    payload: val\n  };\n};\nexport const Failure = val => {\n  return {\n    type: \"ERR\",\n    payload: val\n  };\n};\nexport const Delete = val => {\n  return {\n    type: \"DEL\",\n    payload: val\n  };\n};\nexport const AddDeployment = (Url, version, TemplateName) => {\n  console.log(Url);\n  console.log(version);\n  console.log(TemplateName);\n  var request = {\n    url: Url,\n    templateName: TemplateName,\n    version: version,\n    deployedAt: new Date()\n  };\n  console.log(request); // for (const key in data) {\n  //   if (data.hasOwnProperty(key)) {\n  //     const element = data[key];\n  //     console.log(key+\":\"+element);\n  //      var key = element;\n  //   }\n  // }\n  //console.log(request);\n  // return dispatch => {\n  //     axios.post(\"http://localhost:8000/adddeployment\",Url)\n  //       .then(res => {\n  //         dispatch(Success(res.data));\n  //        // console.log(res.data);\n  //       })\n  //       .catch(err => {\n  //        // console.log(err)\n  //         dispatch(Failure(err.message));\n  //         //console.log(err);\n  //       });\n  //   };\n};\nexport const RemoveDeployment = value => {\n  return dispatch => {\n    axios.post(\"http://localhost:8000/deletedeployment\", {\n      id: value\n    }).then(res => {\n      dispatch(Delete(res));\n    }).catch(err => {\n      dispatch(Failure(err.message));\n    });\n  };\n};\nexport const LoadDeployment = () => {\n  return dispatch => {\n    axios.get(\"http://localhost:8000/getdeployments\").then(res => {\n      dispatch(Delete(res.data.Data)); // console.log(res.data.Data);\n    }).catch(err => {\n      console.log(err);\n      dispatch(Failure(err.message));\n    });\n  };\n};","map":{"version":3,"sources":["E:/Interview/EJAM-VIEW/my-app/src/Store/ActionCreators/DeploymentActions.js"],"names":["axios","Success","val","type","payload","Failure","Delete","AddDeployment","Url","version","TemplateName","console","log","request","url","templateName","deployedAt","Date","RemoveDeployment","value","dispatch","post","id","then","res","catch","err","message","LoadDeployment","get","data","Data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,OAAO,GAAGC,GAAG,IAAI;AAC1B,SAAO;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAEF;AAAxB,GAAP;AACD,CAFI;AAIL,OAAO,MAAMG,OAAO,GAAGH,GAAG,IAAI;AAC5B,SAAO;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAEF;AAAxB,GAAP;AACD,CAFM;AAKP,OAAO,MAAMI,MAAM,GAAGJ,GAAG,IAAI;AAC3B,SAAO;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,OAAO,EAAEF;AAAxB,GAAP;AACD,CAFM;AAIT,OAAO,MAAMK,aAAa,GAAG,CAACC,GAAD,EAAKC,OAAL,EAAaC,YAAb,KAC7B;AAEEC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AAEA,MAAIG,OAAO,GAAG;AACZC,IAAAA,GAAG,EAAGN,GADM;AAEZO,IAAAA,YAAY,EAACL,YAFD;AAGZD,IAAAA,OAAO,EAAGA,OAHE;AAIZO,IAAAA,UAAU,EAAG,IAAIC,IAAJ;AAJD,GAAd;AAQAN,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ,EAdF,CAgBE;AACA;AACA;AACA;AACA;AAEA;AACA;AAMF;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA5CM;AA8CP,OAAO,MAAMK,gBAAgB,GAAIC,KAAD,IAChC;AAEI,SAAOC,QAAQ,IAAI;AACfpB,IAAAA,KAAK,CAACqB,IAAN,CAAW,wCAAX,EAAoD;AAACC,MAAAA,EAAE,EAACH;AAAJ,KAApD,EACGI,IADH,CACQC,GAAG,IAAI;AACXJ,MAAAA,QAAQ,CAACd,MAAM,CAACkB,GAAD,CAAP,CAAR;AAED,KAJH,EAKGC,KALH,CAKSC,GAAG,IAAI;AAEZN,MAAAA,QAAQ,CAACf,OAAO,CAACqB,GAAG,CAACC,OAAL,CAAR,CAAR;AACD,KARH;AASD,GAVH;AAaH,CAhBM;AAmBP,OAAO,MAAMC,cAAc,GAAG,MAC9B;AAGI,SAAOR,QAAQ,IAAI;AACfpB,IAAAA,KAAK,CAAC6B,GAAN,CAAU,sCAAV,EACGN,IADH,CACQC,GAAG,IAAI;AACXJ,MAAAA,QAAQ,CAACd,MAAM,CAACkB,GAAG,CAACM,IAAJ,CAASC,IAAV,CAAP,CAAR,CADW,CAEZ;AACA,KAJH,EAKGN,KALH,CAKSC,GAAG,IAAI;AACZf,MAAAA,OAAO,CAACC,GAAR,CAAYc,GAAZ;AACAN,MAAAA,QAAQ,CAACf,OAAO,CAACqB,GAAG,CAACC,OAAL,CAAR,CAAR;AACD,KARH;AASD,GAVH;AAaH,CAjBM","sourcesContent":["import axios from 'axios';\r\nexport const Success = val => {\r\n    return { type: \"ADD\", payload: val };\r\n  };\r\n\r\n  export const Failure = val => {\r\n    return { type: \"ERR\", payload: val };\r\n  };\r\n\r\n\r\n  export const Delete = val => {\r\n    return { type: \"DEL\", payload: val };\r\n  };\r\n\r\nexport const AddDeployment = (Url,version,TemplateName) =>\r\n{\r\n\r\n  console.log(Url);\r\n  console.log(version);\r\n  console.log(TemplateName);\r\n  \r\n  var request = {\r\n    url : Url,\r\n    templateName:TemplateName,\r\n    version : version,\r\n    deployedAt : new Date()\r\n  } \r\n  \r\n\r\n  console.log(request);\r\n\r\n  // for (const key in data) {\r\n  //   if (data.hasOwnProperty(key)) {\r\n  //     const element = data[key];\r\n  //     console.log(key+\":\"+element);\r\n  //      var key = element;\r\n\r\n  //   }\r\n  // }\r\n\r\n  \r\n\r\n\r\n \r\n//console.log(request);\r\n\r\n    // return dispatch => {\r\n    //     axios.post(\"http://localhost:8000/adddeployment\",Url)\r\n    //       .then(res => {\r\n    //         dispatch(Success(res.data));\r\n    //        // console.log(res.data);\r\n    //       })\r\n    //       .catch(err => {\r\n    //        // console.log(err)\r\n    //         dispatch(Failure(err.message));\r\n    //         //console.log(err);\r\n    //       });\r\n    //   };\r\n};\r\n\r\nexport const RemoveDeployment = (value) =>\r\n{\r\n\r\n    return dispatch => {\r\n        axios.post(\"http://localhost:8000/deletedeployment\",{id:value})\r\n          .then(res => {\r\n            dispatch(Delete(res));\r\n           \r\n          })\r\n          .catch(err => {\r\n           \r\n            dispatch(Failure(err.message));\r\n          });\r\n      };\r\n\r\n\r\n}\r\n\r\n\r\nexport const LoadDeployment = () =>\r\n{\r\n\r\n \r\n    return dispatch => {\r\n        axios.get(\"http://localhost:8000/getdeployments\")\r\n          .then(res => {\r\n            dispatch(Delete(res.data.Data));\r\n           // console.log(res.data.Data);\r\n          })\r\n          .catch(err => {\r\n            console.log(err)\r\n            dispatch(Failure(err.message));\r\n          });\r\n      };\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}