{"ast":null,"code":"var _jsxFileName = \"E:\\\\Interview\\\\EJAM-VIEW\\\\my-app\\\\src\\\\Componets\\\\Deployment.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../Store/ActionCreators/DeploymentActions';\n\nclass Deployments extends React.Component {\n  constructor(props) {\n    super(props); // this.handleClickIndex = this.handleClickIndex.bind(this)\n    // console.log(props);\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      style: {\n        listStyleType: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, this.props.Deployments && this.props.Deployments.map((Delployment, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: Delployment._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 97\n      }\n    }, Delployment.templateName, \" \", /*#__PURE__*/React.createElement(\"button\", {\n      name: \"removeTask\",\n      onClick: event => this.props.handleClickIndex(Delployment._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 150\n      }\n    }, \"x\")))));\n  }\n\n} // const mapStateToProps= (state) => \n//    {\n//         return {\n//             Delployments:state.Deployments\n//         }\n//   }\n\n\nconst mapDispatchToProps = (dispatch, Ownprops) => {\n  return {\n    LoadDeployment: () => dispatch(actionCreator.LoadDeployment()),\n    handleClickIndex: DepID => dispatch(actionCreator.RemoveDeployment(DepID))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Deployments);","map":{"version":3,"sources":["E:/Interview/EJAM-VIEW/my-app/src/Componets/Deployment.js"],"names":["React","connect","actionCreator","Deployments","Component","constructor","props","render","console","log","listStyleType","map","Delployment","index","_id","templateName","event","handleClickIndex","mapDispatchToProps","dispatch","Ownprops","LoadDeployment","DepID","RemoveDeployment"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,aAAZ,MAA+B,2CAA/B;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CACA;AACIC,EAAAA,WAAW,CAAEC,KAAF,EACX;AACG,UAAMA,KAAN,EADH,CAEE;AAED;AACA;;AAIDC,EAAAA,MAAM,GACN;AAECC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AAEG,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,KAAK,EAAE;AAACI,QAAAA,aAAa,EAAC;AAAf,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGK,KAAKJ,KAAL,CAAWH,WAAX,IAA0B,KAAKG,KAAL,CAAWH,WAAX,CAAuBQ,GAAvB,CAA2B,CAACC,WAAD,EAAaC,KAAb,kBAAsB;AAAI,MAAA,GAAG,EAAED,WAAW,CAACE,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BF,WAAW,CAACG,YAAvC,oBAAqD;AAAQ,MAAA,IAAI,EAAC,YAAb;AAA0B,MAAA,OAAO,EAAEC,KAAK,IAAE,KAAKV,KAAL,CAAWW,gBAAX,CAA4BL,WAAW,CAACE,GAAxC,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAArD,CAAjD,CAH/B,CADJ,CADJ;AAUH;;AA1BL,C,CA+BA;AACA;AACA;AACA;AACA;AACA;;;AAEE,MAAMI,kBAAkB,GAAG,CAACC,QAAD,EAAUC,QAAV,KAAuB;AAC5C,SAAO;AACHC,IAAAA,cAAc,EAAG,MAAKF,QAAQ,CAACjB,aAAa,CAACmB,cAAd,EAAD,CAD3B;AAEHJ,IAAAA,gBAAgB,EAAIK,KAAD,IAAUH,QAAQ,CAACjB,aAAa,CAACqB,gBAAd,CAA+BD,KAA/B,CAAD;AAFlC,GAAP;AAKL,CAND;;AAQF,eAAerB,OAAO,CAAC,IAAD,EAAMiB,kBAAN,CAAP,CAAiCf,WAAjC,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actionCreator from '../Store/ActionCreators/DeploymentActions';\r\n\r\nclass Deployments extends React.Component\r\n{\r\n    constructor (props)\r\n    {\r\n       super(props);\r\n      // this.handleClickIndex = this.handleClickIndex.bind(this)\r\n\r\n     // console.log(props);\r\n    }\r\n\r\n\r\n\r\n    render()\r\n    {\r\n\r\n     console.log(this.props);\r\n\r\n        return(\r\n            <div>\r\n                <ul style={{listStyleType:\"none\"}}>\r\n                  {/* { this.props.Deployments && this.props.Delployments.map((Delployment,index)=><li key={Delployment._id}>{Delployment.templateName} <button name=\"removeTask\" onClick={event=>this.props.handleClickIndex(Delployment._id)}>x</button></li>  */}\r\n                  \r\n                    {this.props.Deployments && this.props.Deployments.map((Delployment,index)=> <li key={Delployment._id}>{Delployment.templateName} <button name=\"removeTask\" onClick={event=>this.props.handleClickIndex(Delployment._id)}>x</button></li> )}\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n// const mapStateToProps= (state) => \r\n//    {\r\n//         return {\r\n//             Delployments:state.Deployments\r\n//         }\r\n//   }\r\n\r\n  const mapDispatchToProps = (dispatch,Ownprops) => {\r\n        return {\r\n            LoadDeployment : ()=> dispatch(actionCreator.LoadDeployment()),\r\n            handleClickIndex : (DepID)=> dispatch(actionCreator.RemoveDeployment(DepID))\r\n        }\r\n \r\n  }\r\n\r\nexport default connect(null,mapDispatchToProps)(Deployments);\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}